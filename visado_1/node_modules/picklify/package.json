{
  "_args": [
    [
      "picklify@github:lwoites/picklify",
      "/home/camila/Desktop/Unqify/visado_1"
    ]
  ],
  "_from": "lwoites/picklify",
  "_id": "picklify@1.0.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/picklify",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/lwoites/picklify/master/package.json",
      "gitUrl": "git://github.com/lwoites/picklify.git",
      "httpsUrl": "git+https://github.com/lwoites/picklify.git",
      "shortcut": "github:lwoites/picklify",
      "ssh": "git@github.com:lwoites/picklify.git",
      "sshUrl": "git+ssh://git@github.com/lwoites/picklify.git",
      "type": "github"
    },
    "name": "picklify",
    "raw": "picklify@github:lwoites/picklify",
    "rawSpec": "github:lwoites/picklify",
    "scope": null,
    "spec": "github:lwoites/picklify",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/lwoites/picklify.git#66be84b245ab86ab13bc90ba9be2d0c9f3090b15",
  "_shasum": "aad00f84a5ca4aba8674ed09db0a90e1c7aa5036",
  "_shrinkwrap": null,
  "_spec": "picklify@github:lwoites/picklify",
  "_where": "/home/camila/Desktop/Unqify/visado_1",
  "author": {
    "name": "Lautaro Woites"
  },
  "bugs": {
    "url": "https://github.com/lwoites/picklify/issues"
  },
  "dependencies": {},
  "description": "Serialize/Deserialize objects maintaning references (circular refs too)",
  "devDependencies": {
    "chai": "^4.1.2",
    "eslint": "^5.1.0",
    "eslint-config-google": "^0.10.0",
    "mocha": "^5.0.5",
    "nyc": "^12.0.2"
  },
  "files": [
    "picklify.js"
  ],
  "gitHead": "66be84b245ab86ab13bc90ba9be2d0c9f3090b15",
  "homepage": "https://github.com/lwoites/picklify#readme",
  "keywords": [
    "deserialize",
    "serialize"
  ],
  "license": "GPL-3.0",
  "main": "picklify.js",
  "name": "picklify",
  "optionalDependencies": {},
  "readme": "\n[![Build Status](https://travis-ci.org/lwoites/picklify.svg?branch=master)](https://travis-ci.org/lwoites/picklify)\n[![codecov](https://codecov.io/gh/lwoites/picklify/branch/master/graph/badge.svg)](https://codecov.io/gh/lwoites/picklify) [![Greenkeeper badge](https://badges.greenkeeper.io/lwoites/picklify.svg)](https://greenkeeper.io/)\n\nInstall\n=======\n    npm install picklify\n\nBasic Usage\n=======\n\n```javascript\nconst { picklify, unpicklify } = require('picklify');\nlet serializedData = picklify(someObject);\n// serializedData is JSON object that can be saved or being sent through the network\n\nlet originalObject = unpicklify(serializedData);\n\n// unpicklify need access to constructors for building the original objects.\n// So they must be on the global scope or being passed as a second argument to // unpicklify\nlet originalObject = unpicklify(serializedData, [class1, class2]);\n```\n\nExamples\n=======\n\nKeep references\n--------------\n\n```javascript\nconst aSharedList = [4, 5, 6];\nconst object1 = {'a': 1, 'l1': aSharedList};\nconst object2 = {'b': 2, 'l2': aSharedList};\nconst input = [object1, object2, object1, object2];\n\nconst serializedData = picklify.picklify(input);\nconst reconstructedObject = picklify.unpicklify(serializedData);\n\nreconstructedObject[0].l1 ==  reconstructedObject[1].l2 // true\nreconstructedObject[0] == reconstructedObject[2]; // true\nreconstructedObject[1] == reconstructedObject[3]; // true\n```\n\nAllow recursion\n---------------\n\n```javascript\nlet object1 = {'a': 1};\nconst object2 = {'b': 2, 'o1': object1}; //object2 references object1\nobject1['o2'] = object2; //object1 references object2\n\n\nconst serializedData = picklify.picklify(object1);\nconst reconstructedObject = picklify.unpicklify(serializedData);\n```\n\nCustom classes\n--------------\n\n```javascript\n\nlet slash = new Musician('Slash', 44);\nlet gnr = new Band('GnR', [slash]);\nlet velvetRevolver = new Band('Velvet Revolver', [slash]);\n\nconst bands = [gnr, velvetRevolver];\nconst serializedData = picklify.picklify(bands);\n\nconst reconstructedBands = picklify.unpicklify(\n    serializedData, [Band, Musician]\n);\n\n// evaulates to true\nreconstructedBands[0].members[0] == reconstructedBands[1].members[0]\n```\n\nReference\n=======\n    see test.js",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lwoites/picklify.git"
  },
  "scripts": {
    "CICoverage": "nyc --reporter=text-lcov mocha > coverage.lcov && codecov",
    "coverage": "nyc --reporter=html --reporter=text  mocha",
    "test": "mocha"
  },
  "version": "1.0.1"
}
